{"data":{"site":{"siteMetadata":{"title":"Electric Sheep Blog","author":"takeshiino21","homepage":"https://github.com/t-keshi-inoue"}},"post":{"id":"a470bf64-bdc5-5893-bf54-cebaeeb34a3e","html":"<p>　日進月歩どころの騒ぎではなく、目まぐるしい変化を遂げるWebの世界。\nだからこそ流行に踊らされず、ここから先どんな技術が生まれようとも変わらない確かなプログラミング技術、そしてそのコアを求めて。\n人はみなOOPに辿り着くのであった➖➖。</p>\n<h2>OOPとは何か</h2>\n<p>　Object Oriented Programmingの略、日本語にするとオブジェクト指向プログラミングの意味。OOPに分類される言語としては、JavaやC#、Rubyなどが挙げられる。クラス、ポリモーフィズム、継承の3つの概念をその基本とする。</p>\n<h2>３つの概念</h2>\n<p>　クラスとは「まとめるもの」であり、「まとめたものの例をつくるもの」。動物というクラス。そしてその犬という名の例、インスタンス。と考えるとわかりやすい。このとき犬は\b動物の中に「隠される」。野菜やそのインスタンス、キャベツは犬の存在を知らない。存在を知らないというのは言い換えれば独立しているということで、依存関係が減るほど、プログラミングは設計しやすくメンテナンスしやすい。隠れているのはむしろ都合がいいことなのだ。<br>\nポリモーフィズムは「多態性」と訳される。これだけ聞くとなんのこっちゃという感じだが、要するに「いろいろと形を変える」という意味で、とりあえずは柔軟なやつなんだ、どんな場所でも役に立つイケてるやつだと考えていいのではないだろうか。<br>\n継承はズバリ受け継ぐということ。もし動物に何かしら音を出すという性質があるなら、犬は吠えるし、猫はミャーと鳴く、人間は話す。これは音を出すという性質を犬が動物から「継承」していると考えることができる。<br>\n以上がざっくりOOPの基本３つの概念だ。抽象的で理解しづらいが、抽象的なものほどいろんなとこで役に立つ。具体的すぎて汎化可能性に欠けるよりは幾分いいし、だから学ぶ価値がある。抽象的であればこそ、OOPはプログラミングの枠を越えて人間が現実世界を理解するための概念として様々な現場で取り入れられているのかも知れない。</p>\n<h2>OOPと関数型言語</h2>\n<p>　OOPと関数型言語は、どちらが親でどちら子かというつながりではなくて、まったく別の潮流にあるものらしい。HaskelやScalaの熱烈なユーザーからすると、「オブジェクト指向はもう古い！」となるが、一方OOPの側からすると「関数型？あんなものプログラミングではない！」となる。どっちがいいのか問題は、今後も決着がつくことはないだろう。というより、右に振れたり左に振れたりしながら時を刻んでいく振り子のように、お互いがお互いを成長させるようなライバルみたいなイメージが正解なのかもしれない。おそらくは「両方学んでおこう」という決断が最良のものである。どっちから？うーん、やはりより歴史のあるOOPからマスターすると良いのだろうか。</p>\n<p>以上、OOPについて。\nまだまだ深掘っていく必要がありそうだが、とりあえずはここまで。</p>","frontmatter":{"title":"OOPを考える","path":"/post20/","images":["images/1.png"],"category":"other","tags":["other"],"date":"2019-11-18T00:00:00.000Z","components":null,"tweets":null,"summary":"オブジェクト指向に挑む"}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}