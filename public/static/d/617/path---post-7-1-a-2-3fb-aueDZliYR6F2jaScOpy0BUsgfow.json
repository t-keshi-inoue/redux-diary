{"data":{"site":{"siteMetadata":{"title":"Electric Sheep Blog","author":"takeshiino21","homepage":"https://github.com/t-keshi-inoue"}},"post":{"id":"74e50e86-7b52-57dd-a90f-2ea119044b32","html":"<h2>prettierとの出逢い</h2>\n<p>世の中にはタブキーを押したときのインデントが\nスペース2個分派の人とスペース4個分派の人がいるのである。\n不肖私はスペース2個分派なので4個分で改行されているコードが見にくくてしょうがないと感じる。\n一個ずつスペース弄ってくなんて非常に手間である。\nそんな訳で私はprettierと出会った。</p>\n<h2>prettier　is何？\\</h2>\n<p>prettierとは、コードを簡単に綺麗にしてくれる便利ツールである。\nフォーマッターと呼ばれる種類のもので、他にはBeutifyなどが有名だ。</p>\n<h2>それESLintで良くね？問題</h2>\n<p>フォーマッターがなくてもリンターでコードは綺麗にできる。\n加えて、リンターは構文のチェックもしてくれるから、\nまるでフォマッターはリンターの下位互換であるかのようである。\nしかし、そこで私は声を大にして「待ったー！」と言いたい（フォーマッターだけにね）。\nなぜなら殊整形についてはフォマッターの専門領域ではあり、\nリンターだけではどうにもならない痒い部分に手が届くからだ。</p>\n<h2>設定手順</h2>\n<p>まずはインストールから。<br>\nnpm install prettier -D<br>\n続いてパスを通す。<br>\nexport PATH=$PATH:./node_modules/.bin<br>\nあとは整形するだけだ。<br>\nprettier app.js —write  </p>\n<p>細かいルールの設定方法についてはQiitaに色々と載っているのでそちらを。\nESLintの機能とがっつり衝突するので、\nどこをprettierにしてどこをESLintにすればいいか難しいかもしれない。\nそんなときは併用したい方のためのパッケージがあるのでかなりオススメだ。\n以下のコマンドでインストールできる。\nnpm install eslint eslint-config-prettier eslint-plugin-prettier -D</p>\n<p>以上！\n便利なのでぜひ！</p>","frontmatter":{"title":"ESLintで整形しよう","path":"/post-7/","images":["images/5.png"],"category":"React","tags":["ESLint"],"date":"2019-11-27T00:00:00.000Z","components":null,"tweets":null,"summary":"フォマッターを使ってみるならまずはESLint?..."}}},"pageContext":{"isCreatedByStatefulCreatePages":false}}